table ipl_matches_data
	lineageTag: 2fa02ddb-9761-4843-a5ed-2dc05ebaf2f3

	measure 'Season Winner' =
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR FinalMatchDate = CALCULATE(MAX(ipl_matches_data[match_date]),ipl_matches_data[season] = SelectedSeason)
			
			VAR FinalMatchWinner = CALCULATE(MAX(ipl_matches_data[match_winner]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			RETURN FinalMatchWinner
		lineageTag: 6cebee19-9c4b-4506-80cf-af81e1ffc0c3

	measure 'Season Winner Logo' = ```
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR FinalMatchDate = CALCULATE(MAX(ipl_matches_data[match_date]),ipl_matches_data[season] = SelectedSeason)
			
			VAR FinalMatchWinner = CALCULATE(MAX(ipl_matches_data[match_winner]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			RETURN 
			LOOKUPVALUE(teams_data[image_url],teams_data[team_name], FinalMatchWinner
			)
			```
		lineageTag: d8fb4056-d471-4880-9362-8a06fc01188f
		dataCategory: ImageUrl

	measure 'Runner Up' = ```
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR FinalMatchDate = CALCULATE(MAX(ipl_matches_data[match_date]),ipl_matches_data[season] = SelectedSeason)
			
			VAR FinalMatchWinner = CALCULATE(MAX(ipl_matches_data[match_winner]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			VAR Team1 = CALCULATE(MAX(ipl_matches_data[team1]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			VAR Team2 = CALCULATE(MAX(ipl_matches_data[team2]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			RETURN 
			IF(FinalMatchWinner = Team1, Team2, Team1)
			
			```
		lineageTag: 8e020874-21f1-4c52-9c5d-009eb0d53056

	measure 'Runner Up Logo' = ```
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR FinalMatchDate = CALCULATE(MAX(ipl_matches_data[match_date]),ipl_matches_data[season] = SelectedSeason)
			
			VAR FinalMatchWinner = CALCULATE(MAX(ipl_matches_data[match_winner]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			VAR Team1 = CALCULATE(MAX(ipl_matches_data[team1]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			VAR Team2 = CALCULATE(MAX(ipl_matches_data[team2]),ipl_matches_data[season] = SelectedSeason,ipl_matches_data[match_date] = FinalMatchDate)
			
			RETURN 
			LOOKUPVALUE(teams_data[image_url],teams_data[team_name], [Runner Up])
			
			
			```
		lineageTag: c2b9b40b-6d41-4ef9-8f68-0ca0e6e80214
		dataCategory: ImageUrl

	measure 'Total 6''s' =
			
			
			CALCULATE(COUNTROWS(ball_by_ball_data),ball_by_ball_data[batter_runs] = 6, KEEPFILTERS(VALUES(ipl_matches_data[season])))
		formatString: 0
		lineageTag: f964f026-f0b9-4c9b-9ae0-84c158f47aad

	measure 'Total 4''s' =
			
			
			CALCULATE(COUNTROWS(ball_by_ball_data),ball_by_ball_data[batter_runs] = 4, KEEPFILTERS(VALUES(ipl_matches_data[season])))
		formatString: 0
		lineageTag: bcf468e8-f421-4cb6-9764-8772eb2c9a9c

	measure 'Total Matches' = CALCULATE(DISTINCTCOUNT(ipl_matches_data[match_id]))
		formatString: 0
		lineageTag: 118f5623-a732-4e1c-8be7-70c33e2657f6

	measure 'Total Teams' = CALCULATE(DISTINCTCOUNT(ipl_matches_data[team1]))
		formatString: 0
		lineageTag: 770d1805-d7b8-421d-b061-9d075fe07472

	measure Centuries =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonData = FILTER(ball_by_ball_data,RELATED(ipl_matches_data[season]) = SelectedSeason)
			
			VAR BatterRuns = SUMMARIZE(SeasonData,ball_by_ball_data[match_id],ball_by_ball_data[batter], "Total Runs", SUM(ball_by_ball_data[batter_runs]))
			
			VAR CenturyCount = FILTER(BatterRuns, [Total Runs] >= 100)
			
			RETURN COUNTROWS(CenturyCount)
		formatString: 0
		lineageTag: 7a488b3c-32ee-4599-b6b2-5bbd09db8291

	measure 'Half Centuries' =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonData = FILTER(ball_by_ball_data,RELATED(ipl_matches_data[season]) = SelectedSeason)
			
			VAR BatterRuns = SUMMARIZE(SeasonData,ball_by_ball_data[match_id],ball_by_ball_data[batter], "Total Runs", SUM(ball_by_ball_data[batter_runs]))
			
			VAR CenturyCount = FILTER(BatterRuns, [Total Runs] >= 50 && [Total Runs]<100)
			
			RETURN COUNTROWS(CenturyCount)
		formatString: 0
		lineageTag: b4ad41c5-6d4c-43a3-a03b-f8d8ceb327de

	measure 'Total Venues' =
			
			CALCULATE(DISTINCTCOUNT(ipl_matches_data[venue]))
		formatString: 0
		lineageTag: fb35d072-be77-4a45-9b51-91bcba5bf73e

	measure 'Orange Cap Holder' =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonDataOnly = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason)
			
			Var RunSummary = SUMMARIZE(SeasonDataOnly, ball_by_ball_data[batter],"Total Runs", SUM(ball_by_ball_data[batter_runs]))
			
			VAR MaxRuns = MAXX(RunSummary, [Total Runs])
			
			VAR TopScorer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(RunSummary,[Total Runs]= MaxRuns))
			
			RETURN MAXX(TopScorer,ball_by_ball_data[batter])
		lineageTag: 20f2d02a-9c89-450e-9f6e-7d3cf60f1f69

	measure 'Orange Cap Runs' =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonDataOnly = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason)
			
			Var RunSummary = SUMMARIZE(SeasonDataOnly, ball_by_ball_data[batter],"Total Runs", SUM(ball_by_ball_data[batter_runs]))
			
			VAR MaxRuns = MAXX(RunSummary, [Total Runs])
			
			RETURN MaxRuns
		formatString: 0
		lineageTag: 8308295f-6c95-4cdc-ba6c-5d7ebbd2e906

	measure 'Orange Cap Team Name' =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonDataOnly = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason)
			
			Var RunSummary = SUMMARIZE(SeasonDataOnly, ball_by_ball_data[batter],"Total Runs", SUM(ball_by_ball_data[batter_runs]))
			
			VAR MaxRuns = MAXX(RunSummary, [Total Runs])
			
			VAR TopScorer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(RunSummary,[Total Runs]= MaxRuns))
			
			VAR FullTeamName = CALCULATE(MAX(ball_by_ball_data[team_batting]), FILTER(SeasonDataOnly, ball_by_ball_data[batter] = MAXX(TopScorer,ball_by_ball_data[batter])))
			
			RETURN FullTeamName
		lineageTag: a545a456-bea5-4434-9271-15fd30dcea27

	measure 'Orange Cap Holder Image' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonDataOnly = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason)
			
			Var RunSummary = SUMMARIZE(SeasonDataOnly, ball_by_ball_data[batter],"Total Runs", SUM(ball_by_ball_data[batter_runs]))
			
			VAR MaxRuns = MAXX(RunSummary, [Total Runs])
			
			VAR TopScorer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(RunSummary,[Total Runs]= MaxRuns))
			
			RETURN 
			
			LOOKUPVALUE('players-data-updated'[player_image], 'players-data-updated'[player_name], MAXX(TopScorer,ball_by_ball_data[batter]))
			```
		lineageTag: fe99ce90-2356-4616-a406-962c03bf7317

	measure PurpleCapHolder =
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonWickets =
			FILTER(
			ball_by_ball_data,
			RELATED(ipl_matches_data[season]) = SelectedSeason &&
			ball_by_ball_data[is_wicket] = TRUE() &&
			NOT ball_by_ball_data[wicket_kind] IN { "run out", "retired hurt", "obstructing the field","retired out"})
			
			 VAR WicketSummary =
			SUMMARIZE(
			SeasonWickets,
			ball_by_ball_data[bowler],
			"WicketCount", COUNTROWS(
			FILTER(SeasonWickets, ball_by_ball_data[bowler] = EARLIER(ball_by_ball_data[bowler]))
			))
			
			VAR MaxWickets = MAXX(WicketSummary, [WicketCount])
			
			VAR TopBowler =
			CALCULATETABLE(
			VALUES(ball_by_ball_data[bowler]),
			FILTER(WicketSummary, [WicketCount] = MaxWickets))
			
			RETURN MAXX(TopBowler,ball_by_ball_data[bowler])
		lineageTag: 3b5af062-f610-46c4-873b-fcfe8ac45de2

	measure PurpleCapWicketCount = ```
			
			 VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			 VAR SeasonWickets =
			FILTER(
			ball_by_ball_data,
			RELATED(ipl_matches_data[season]) = SelectedSeason &&
			ball_by_ball_data[is_wicket] = TRUE() &&
			NOT ball_by_ball_data[wicket_kind] IN { "run out", "retired hurt", "obstructing the field","retired out"})
			
			 VAR WicketSummary =
			SUMMARIZE(
			SeasonWickets,
			ball_by_ball_data[bowler],
			"WicketCount", COUNTROWS(
			FILTER(SeasonWickets, ball_by_ball_data[bowler] = EARLIER(ball_by_ball_data[bowler]))))
			
			
			VAR MaxWickets = MAXX(WicketSummary, [WicketCount])
			
			RETURN
			    MaxWickets
			```
		formatString: 0
		lineageTag: 39b88722-f371-44b9-93bd-2cf6a9181dd9

	measure PurpleCapTeamName = ```
			
			 VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			 VAR SeasonWickets =
			FILTER(
			ball_by_ball_data,
			RELATED(ipl_matches_data[season]) = SelectedSeason &&
			ball_by_ball_data[is_wicket] = TRUE() &&
			NOT ball_by_ball_data[wicket_kind] IN { "run out", "retired hurt", "obstructing the field","retired out"})
			
			 VAR WicketSummary =
			ADDCOLUMNS(
			    SUMMARIZE(
			SeasonWickets,
			ball_by_ball_data[bowler],ball_by_ball_data[team_bowling]),
			"WicketCount", COUNTROWS(
			FILTER(SeasonWickets, ball_by_ball_data[bowler] = EARLIER(ball_by_ball_data[bowler]))))
			
			
			VAR MaxWickets = MAXX(WicketSummary, [WicketCount])
			
			RETURN
			MAXX(FILTER(WicketSummary,[WicketCount] = MaxWickets), ball_by_ball_data[team_bowling])
			```
		lineageTag: ac616122-999d-4fd5-a0a1-45e232447b65

	measure 'Purple Cap Image' = ```
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonWickets =
			FILTER(
			ball_by_ball_data,
			RELATED(ipl_matches_data[season]) = SelectedSeason &&
			ball_by_ball_data[is_wicket] = TRUE() &&
			NOT ball_by_ball_data[wicket_kind] IN { "run out", "retired hurt", "obstructing the field","retired out"})
			
			 VAR WicketSummary =
			SUMMARIZE(
			SeasonWickets,
			ball_by_ball_data[bowler],
			"WicketCount", COUNTROWS(
			FILTER(SeasonWickets, ball_by_ball_data[bowler] = EARLIER(ball_by_ball_data[bowler]))
			))
			
			VAR MaxWickets = MAXX(WicketSummary, [WicketCount])
			
			VAR TopBowler =
			CALCULATETABLE(
			VALUES(ball_by_ball_data[bowler]),
			FILTER(WicketSummary, [WicketCount] = MaxWickets))
			
			
			
			RETURN
			LOOKUPVALUE('players-data-updated'[player_image],'players-data-updated'[player_name],MAXX(TopBowler,ball_by_ball_data[bowler]))
			
			```
		lineageTag: ed90fb77-d7fd-4c5f-bd46-8c3e0679d638

	measure 'Top Four Scorer' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 4)
			
			VAR FourSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "FoursCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxFours = MAXX(FourSummary,[FoursCount])
			
			VAR TopFoursPlayer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(FourSummary,[FoursCount]=MaxFours))
			
			RETURN MAXX( TopFoursPlayer, ball_by_ball_data[batter])
			
			```
		lineageTag: 7d6da3e0-f0b1-4a28-a425-5e401515ab34

	measure 'Top Four Score count' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 4)
			
			VAR FourSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "FoursCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxFours = MAXX(FourSummary,[FoursCount])
			
			
			RETURN MaxFours
			
			```
		formatString: 0
		lineageTag: d31bda85-df9d-473e-b7ad-3eae4d00edf2

	measure 'Top Four Scorer Team Name' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 4)
			
			VAR FourSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "FoursCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxFours = MAXX(FourSummary,[FoursCount])
			
			VAR TopFoursPlayer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(FourSummary,[FoursCount]=MaxFours))
			
			VAR BatterTeam = CALCULATE(MAX(ball_by_ball_data[team_batting]),FILTER(SeasonFours,ball_by_ball_data[batter]=MAXX(TopFoursPlayer,ball_by_ball_data[batter])))
			RETURN BatterTeam
			
			```
		lineageTag: c8cdd855-e5d1-4ba8-9452-aeb199498801

	measure 'Top Four Scorer Image' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 4)
			
			VAR FourSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "FoursCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxFours = MAXX(FourSummary,[FoursCount])
			
			VAR TopFoursPlayer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(FourSummary,[FoursCount]=MaxFours))
			
			RETURN 
			LOOKUPVALUE('players-data-updated'[player_image],'players-data-updated'[player_name],MAXX(TopFoursPlayer,ball_by_ball_data[batter]))
			```
		lineageTag: 65d21285-c088-4478-992c-787bf1e9ff14

	measure 'Top Six Score count' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 6)
			
			VAR FourSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "SixsCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxFours = MAXX(FourSummary,[SixsCount])
			
			
			RETURN MaxFours
			
			```
		formatString: 0
		lineageTag: f5334e65-5479-4b57-923c-f99851352e7e

	measure 'Top Six Scorer Team Name' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 6)
			
			VAR FourSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "SixsCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxFours = MAXX(FourSummary,[SixsCount])
			
			VAR TopSixsPlayer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(FourSummary,[SixsCount]=MaxFours))
			
			VAR BatterTeam = CALCULATE(MAX(ball_by_ball_data[team_batting]),FILTER(SeasonFours,ball_by_ball_data[batter]=MAXX(TopSixsPlayer,ball_by_ball_data[batter])))
			RETURN BatterTeam
			
			```
		lineageTag: 22b874bd-c5c6-4530-a28c-b9ee5cb4426d

	measure 'Top Six Scorer' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 6)
			
			VAR FourSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "SixsCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxFours = MAXX(FourSummary,[SixsCount])
			
			VAR TopSixPlayer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(FourSummary,[SixsCount]=MaxFours))
			
			RETURN MAXX( TopSixPlayer, ball_by_ball_data[batter])
			
			```
		lineageTag: 712f6737-ea89-4649-8b73-a90064060e29

	measure 'Top Six Scorer Image' = ```
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR SeasonFours = FILTER(ball_by_ball_data, RELATED(ipl_matches_data[season]) = SelectedSeason && ball_by_ball_data[batter_runs] = 6)
			
			VAR SixsSummary = SUMMARIZE(SeasonFours, ball_by_ball_data[batter], "SixsCount",COUNTROWS(FILTER(SeasonFours,ball_by_ball_data[batter] =EARLIER(ball_by_ball_data[batter]))))
			
			VAR MaxSixs = MAXX(SixsSummary,[SixsCount])
			
			VAR TopSixPlayer = CALCULATETABLE(VALUES(ball_by_ball_data[batter]),FILTER(SixsSummary,[SixsCount]=MaxSixs))
			
			RETURN 
			LOOKUPVALUE('players-data-updated'[player_image],'players-data-updated'[player_name],MAXX(TopSixPlayer,ball_by_ball_data[batter]))
			```
		lineageTag: 1ff8577a-0671-41da-ab38-c36f69b9cef4

	measure 'Matches Played' =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR Team1Matches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team1],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20")
			
			
			VAR Team2Matches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team2],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20")
			
			RETURN Team1Matches + Team2Matches
		formatString: 0
		lineageTag: 5e9990cf-670c-4488-8b2e-d1e7693a1b24

	measure 'Matches won' =
			
			VAR SelectedSeason = SELECTEDVALUE( ipl_matches_data[season])
			
			VAR CurrentTeam = SELECTEDVALUE(teams_data[team_name])
			
			RETURN
			CALCULATE(COUNTROWS(ipl_matches_data),ipl_matches_data[season]= SelectedSeason,ipl_matches_data[match_winner] = CurrentTeam, ipl_matches_data[match_type] = "T20")
		formatString: 0
		lineageTag: c7dc2efd-e73c-47b9-b570-19f0fd478851

	measure 'Matches Lost' =
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR Team1LostMatches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team1],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20", Not ISBLANK(ipl_matches_data[match_winner]),ipl_matches_data[match_winner]<>ipl_matches_data[team1])
			
			
			VAR Team2LostMatches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team2],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20",Not ISBLANK(ipl_matches_data[match_winner]),ipl_matches_data[match_winner]<>ipl_matches_data[team2])
			
			RETURN Team1LostMatches + Team2LostMatches
		formatString: 0
		lineageTag: f69c2a62-f641-43aa-917a-e1a424ab7628

	measure 'No Result Matches' =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR Team1Matches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team1],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20",ipl_matches_data[result] = "no result")
			
			
			VAR Team2Matches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team2],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20",ipl_matches_data[result] = "no result")
			
			RETURN Team1Matches + Team2Matches
		formatString: 0
		lineageTag: f529e318-1ffe-4839-88f3-d035679b9660

	measure 'Total Points' =
			
			
			VAR Win = [Matches won]
			
			VAR NR = [No Result Matches]
			
			RETURN (win*2) + NR
		formatString: 0
		lineageTag: 149c23a7-594b-460c-899f-a1ff0246dec8

	measure 'Tie Matches' =
			
			
			VAR SelectedSeason = SELECTEDVALUE(ipl_matches_data[season])
			
			VAR Team1Matches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team1],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20", ipl_matches_data[result] = "tie")
			
			
			VAR Team2Matches = CALCULATE(COUNTROWS(ipl_matches_data), USERELATIONSHIP(ipl_matches_data[team2],teams_data[team_name]),ipl_matches_data[season] = SelectedSeason, ipl_matches_data[match_type]= "T20",ipl_matches_data[result] = "tie")
			
			RETURN Team1Matches + Team2Matches
		formatString: 0
		lineageTag: a946a198-33c3-4fa1-8f0f-12a02c0ea62e

	column match_id
		dataType: int64
		formatString: 0
		lineageTag: d8ffa0c5-125c-4f37-9b8b-012c8043c8ce
		summarizeBy: none
		sourceColumn: match_id

		annotation SummarizationSetBy = Automatic

	column season_id
		dataType: int64
		formatString: 0
		lineageTag: 8f801835-3dff-4dc1-8f06-ebd8c765f751
		summarizeBy: sum
		sourceColumn: season_id

		annotation SummarizationSetBy = Automatic

	column balls_per_over
		dataType: int64
		formatString: 0
		lineageTag: b6abf017-bac2-42c6-9ea9-668bf48f00e4
		summarizeBy: sum
		sourceColumn: balls_per_over

		annotation SummarizationSetBy = Automatic

	column city
		dataType: string
		lineageTag: cd6b3397-c395-4855-8b2f-24825a447272
		summarizeBy: none
		sourceColumn: city

		annotation SummarizationSetBy = Automatic

	column match_date
		dataType: dateTime
		formatString: Long Date
		lineageTag: f32b04e9-2e00-4277-b7f2-daffe967a4eb
		summarizeBy: none
		sourceColumn: match_date

		variation Variation
			isDefault
			relationship: 969c4c80-cb7d-4a70-b505-55ad561bc13e
			defaultHierarchy: LocalDateTable_77a8e117-9ffd-4ad3-80ea-b75c7677a876.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column event_name
		dataType: string
		lineageTag: 26cf2e40-292e-4072-85e0-6549c59b6e4d
		summarizeBy: none
		sourceColumn: event_name

		annotation SummarizationSetBy = Automatic

	column match_number
		dataType: string
		lineageTag: 6af6680d-b527-4013-86d1-6798f3a87a5a
		summarizeBy: none
		sourceColumn: match_number

		annotation SummarizationSetBy = Automatic

	column gender
		dataType: string
		lineageTag: 9c33ede8-d938-49a4-a1f9-2a20cae131f2
		summarizeBy: none
		sourceColumn: gender

		annotation SummarizationSetBy = Automatic

	column match_type
		dataType: string
		lineageTag: 8670b362-752d-44c5-b463-834ca4eefa01
		summarizeBy: none
		sourceColumn: match_type

		annotation SummarizationSetBy = Automatic

	column format
		dataType: string
		lineageTag: c37e16f7-e628-4aaf-9590-ead18c877a1a
		summarizeBy: none
		sourceColumn: format

		annotation SummarizationSetBy = Automatic

	column overs
		dataType: int64
		formatString: 0
		lineageTag: 7afba946-beb2-4f04-ba2f-7cba586f5c96
		summarizeBy: sum
		sourceColumn: overs

		annotation SummarizationSetBy = Automatic

	column season
		dataType: string
		lineageTag: 0df8f821-f2cb-49bd-9f4a-56697914a822
		summarizeBy: none
		sourceColumn: season

		annotation SummarizationSetBy = Automatic

	column team_type
		dataType: string
		lineageTag: bd565909-af12-4d71-aeae-d056b843cee5
		summarizeBy: none
		sourceColumn: team_type

		annotation SummarizationSetBy = Automatic

	column venue
		dataType: string
		lineageTag: 8a84172f-770b-43a1-b126-5a87c84ca845
		summarizeBy: none
		sourceColumn: venue

		annotation SummarizationSetBy = Automatic

	column toss_winner
		dataType: string
		lineageTag: 65b4aa83-d9d6-44a1-b392-44db791e24bf
		summarizeBy: none
		sourceColumn: toss_winner

		annotation SummarizationSetBy = Automatic

	column team1
		dataType: string
		lineageTag: 195009a0-6335-42d2-bbba-df690908faea
		summarizeBy: none
		sourceColumn: team1

		annotation SummarizationSetBy = Automatic

	column team2
		dataType: string
		lineageTag: effdc34d-6699-4e45-94a8-6a91fb040789
		summarizeBy: none
		sourceColumn: team2

		annotation SummarizationSetBy = Automatic

	column toss_decision
		dataType: string
		lineageTag: bc669333-d767-45db-b192-41a890ef818e
		summarizeBy: none
		sourceColumn: toss_decision

		annotation SummarizationSetBy = Automatic

	column match_winner
		dataType: string
		lineageTag: 8914086e-ed6f-4f77-86c0-123b5017b2f6
		summarizeBy: none
		sourceColumn: match_winner

		annotation SummarizationSetBy = Automatic

	column win_by_runs
		dataType: string
		lineageTag: 7539bd34-916c-4cf4-81cf-026dc3881021
		summarizeBy: none
		sourceColumn: win_by_runs

		annotation SummarizationSetBy = Automatic

	column win_by_wickets
		dataType: string
		lineageTag: 76eb9c18-3942-4ff6-b737-878062644c88
		summarizeBy: none
		sourceColumn: win_by_wickets

		annotation SummarizationSetBy = Automatic

	column player_of_match
		dataType: string
		lineageTag: 760e0a66-81f5-47d5-8342-02bf7a8db9d9
		summarizeBy: none
		sourceColumn: player_of_match

		annotation SummarizationSetBy = Automatic

	column result
		dataType: string
		lineageTag: cdc17e10-172e-4306-8f07-48acb5751aa0
		summarizeBy: none
		sourceColumn: result

		annotation SummarizationSetBy = Automatic

	column stage
		dataType: string
		lineageTag: 4383789d-3575-4b77-ae98-3452b7f1016e
		summarizeBy: none
		sourceColumn: stage

		annotation SummarizationSetBy = Automatic

	partition ipl_matches_data = m
		mode: import
		source =
				let
				    Source = Excel.Workbook(File.Contents("C:\Users\KAZI-PC\Downloads\IPL Analysis 2008 - 2025 Data-20250722T093633Z-1-001\IPL Analysis 2008 - 2025 Data\IPL Data\ipl_matches_data.xlsx"), null, true),
				    ipl_matches_data_Sheet = Source{[Item="ipl_matches_data",Kind="Sheet"]}[Data],
				    #"Promoted Headers" = Table.PromoteHeaders(ipl_matches_data_Sheet, [PromoteAllScalars=true]),
				    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"match_id", Int64.Type}, {"season_id", Int64.Type}, {"balls_per_over", Int64.Type}, {"city", type text}, {"match_date", type date}, {"event_name", type text}, {"match_number", type any}, {"gender", type text}, {"match_type", type text}, {"format", type text}, {"overs", Int64.Type}, {"season", type any}, {"team_type", type text}, {"venue", type text}, {"toss_winner", type text}, {"team1", type text}, {"team2", type text}, {"toss_decision", type text}, {"match_winner", type text}, {"win_by_runs", type any}, {"win_by_wickets", type any}, {"player_of_match", type any}, {"result", type text}, {"stage", type any}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

